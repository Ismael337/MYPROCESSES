<Activity mc:Ignorable="sap sap2010" x:Class="AudaceCheckAPI" this:AudaceCheckAPI.in_AudaceCheminCertficatSSL="Data\Input\AudaceSSL\rpa_prod.pfx" this:AudaceCheckAPI.in_AudaceBaseUrlHttpRequest="https://ws-audace.crillon.ratp/secure/api/v1/etat-equipement/" this:AudaceCheckAPI.in_AudaceUrlParamHttpRequest="EQFA-PA-000000183" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_AudaceCheminCertficatSSL" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="URL de base de la requête Http" Name="in_AudaceBaseUrlHttpRequest" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Paramètre de l'URL de base de la requête Http" Name="in_AudaceUrlParamHttpRequest" Type="InArgument(x:String)" />
    <x:Property Name="out_AudaceCodeHttpRequest" Type="OutArgument(x:Int32)" />
    <x:Property Name="in_ExceptionMessageHTTP" Type="InArgument(x:String)" />
    <x:Property Name="out_AudaceResultJsonStr" Type="OutArgument(x:String)" />
  </x:Members>
  <this:AudaceCheckAPI.in_ExceptionMessageHTTP>
    <InArgument x:TypeArguments="x:String" />
  </this:AudaceCheckAPI.in_ExceptionMessageHTTP>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1225,1201</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AudaceCheckAPI_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="62">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: &#xA;&#xA;Condition préalable: N/A &#xA;&#xA;Action Suivante: " DisplayName="AudaceCheckHTTP" sap:VirtualizedContainerService.HintSize="1218,1136" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message (AudaceCheckHTTP Start)" sap:VirtualizedContainerService.HintSize="1176,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;[AudaceCheckHTTP Start...]&quot;]" />
    <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[in_AudaceCheminCertficatSSL]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request Audace" EndPoint="[in_AudaceBaseUrlHttpRequest + in_AudaceUrlParamHttpRequest]" sap:VirtualizedContainerService.HintSize="1176,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[out_AudaceResultJsonStr]" StatusCode="[out_AudaceCodeHttpRequest]" TimeoutMS="30000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <If Condition="[Regex.IsMatch(out_AudaceCodeHttpRequest.ToString,&quot;^2[0-9][0-9]$&quot;)]" DisplayName="If API Audace disponible" sap:VirtualizedContainerService.HintSize="1176,633" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:LogMessage DisplayName="Log Message (Requête traitée avec succès)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;&gt; AudaceCheckHTTP - Requête HTTP traitée avec succès. Code retour HTTP Request &quot;+ out_AudaceCodeHttpRequest.ToString + vbCrLf + out_AudaceResultJsonStr]" />
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Requête Erreur du client HTTP" sap:VirtualizedContainerService.HintSize="797,485" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[Not String.IsNullOrEmpty(in_ExceptionMessageHTTP)]" DisplayName="If Throw Erreur du client HTTP" sap:VirtualizedContainerService.HintSize="755,393" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence DisplayName="Erreur du client HTTP" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message (Erreur du client HTTP)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;&gt; AudaceCheckHTTP - Erreur du client HTTP. Le Code HTTP retour est: &quot;+ out_AudaceCodeHttpRequest.ToString]" />
                <Throw DisplayName="Throw Erreur du client HTTP" Exception="[New Exception(in_ExceptionMessageHTTP)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log Message (Warn Erreur du client HTTP)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Warn" Message="[&quot;&gt; AudaceCheckHTTP - Erreur du client HTTP. Le Code HTTP retour est: &quot;+ out_AudaceCodeHttpRequest.ToString]" />
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message (AudaceCheckHTTP End)" sap:VirtualizedContainerService.HintSize="1176,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;[AudaceCheckHTTP End]&quot;]" />
  </Sequence>
</Activity>